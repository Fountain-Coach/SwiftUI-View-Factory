# 🧠 Codex Task: Bootstrap DragAndDropApp (Docker-Aware)

## 🎯 Goal

Use the View Factory to generate a SwiftUI view from layout JSON, and scaffold a macOS SwiftUI app called `DragAndDropApp`.

---

## 🧾 Input

- Layout file: `draganddrop-starter/draganddrop.layout.json`

---

## 📦 Expected Output

- `DragDropAreaView.swift` (generated)
- `DragAndDropApp/` folder with:
  - `ContentView.swift`
  - `CodePreviewView.swift` (placeholder)
  - `API.swift` (stub)
  - `DragAndDropApp.swift`

---

## 🧰 CLI Commands to Run (in Docker)

Use this to generate the view:
```bash
docker run --rm -v $PWD:/app -e OPENAI_API_KEY=$OPENAI_API_KEY \
  swiftui-factory vi generate draganddrop-starter/draganddrop.layout.json > DragDropAreaView.swift
```

Place the output into `DragAndDropApp/` as part of the new project scaffold.

---

## ⚠️ CI & Platform Notes

- ✅ All Python tests (`pytest`) must pass in Docker (install `requirements.txt`)
- ❌ Do NOT attempt to `swift build` the macOS app — SwiftUI requires AppKit and must be compiled in Xcode on a Mac.
- ✅ You may commit SwiftUI files for human inspection and manual testing.

---

## 🧪 Tests

Use existing CLI test cases (`tests/test_mockup*_flow.py`) to verify baseline behavior.

---

## ✅ Success Criteria

- Layout was interpreted
- SwiftUI view was generated and scaffolded
- Codex committed the new `DragAndDropApp` folder with all relevant files
- `pytest` passes via Docker
setup:
  - scripts/setup_env.sh
